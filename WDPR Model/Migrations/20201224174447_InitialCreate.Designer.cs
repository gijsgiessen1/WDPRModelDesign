// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WDPR_Model.Data;

namespace WDPR_Model.Migrations
{
    [DbContext(typeof(WDPRDesignContext))]
    [Migration("20201224174447_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("WDPR_Model.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("WDPR_Model.Models.AnonymousReportCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnonymousReportCategories");
                });

            modelBuilder.Entity("WDPR_Model.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("WDPR_Model.Models.Flag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("FlagCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDealtWith")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlagCategoryId");

                    b.HasIndex("ReportId");

                    b.HasIndex("UserId");

                    b.ToTable("Flags");
                });

            modelBuilder.Entity("WDPR_Model.Models.FlagCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Categoryname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlagType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FlagCategories");
                });

            modelBuilder.Entity("WDPR_Model.Models.PublicReportCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PublicReportCategories");
                });

            modelBuilder.Entity("WDPR_Model.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reports");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Report");
                });

            modelBuilder.Entity("WDPR_Model.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WDPR_Model.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WDPR_Model.Models.Vote", b =>
                {
                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReportId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("WDPR_Model.Models.AnonymousReport", b =>
                {
                    b.HasBaseType("WDPR_Model.Models.Report");

                    b.Property<int?>("AnonymousReportCategoryId")
                        .HasColumnType("int");

                    b.HasIndex("AnonymousReportCategoryId");

                    b.HasDiscriminator().HasValue("AnonymousReport");
                });

            modelBuilder.Entity("WDPR_Model.Models.PublicReport", b =>
                {
                    b.HasBaseType("WDPR_Model.Models.Report");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("publicReportCategoryId")
                        .HasColumnType("int");

                    b.HasIndex("UserId");

                    b.HasIndex("publicReportCategoryId");

                    b.HasDiscriminator().HasValue("PublicReport");
                });

            modelBuilder.Entity("WDPR_Model.Models.Comment", b =>
                {
                    b.HasOne("WDPR_Model.Models.Report", "Report")
                        .WithMany("Comments")
                        .HasForeignKey("ReportId");

                    b.HasOne("WDPR_Model.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId");

                    b.Navigation("Report");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WDPR_Model.Models.Flag", b =>
                {
                    b.HasOne("WDPR_Model.Models.FlagCategory", "FlagCategory")
                        .WithMany("Flags")
                        .HasForeignKey("FlagCategoryId");

                    b.HasOne("WDPR_Model.Models.Report", "Report")
                        .WithMany("Flags")
                        .HasForeignKey("ReportId");

                    b.HasOne("WDPR_Model.Models.User", "User")
                        .WithMany("Flags")
                        .HasForeignKey("UserId");

                    b.Navigation("FlagCategory");

                    b.Navigation("Report");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WDPR_Model.Models.User", b =>
                {
                    b.HasOne("WDPR_Model.Models.Address", "Address")
                        .WithMany("Users")
                        .HasForeignKey("AddressId");

                    b.HasOne("WDPR_Model.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Address");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WDPR_Model.Models.Vote", b =>
                {
                    b.HasOne("WDPR_Model.Models.Report", "Report")
                        .WithMany("Likes")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WDPR_Model.Models.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WDPR_Model.Models.AnonymousReport", b =>
                {
                    b.HasOne("WDPR_Model.Models.AnonymousReportCategory", "AnonymousReportCategory")
                        .WithMany("AnonymousReports")
                        .HasForeignKey("AnonymousReportCategoryId");

                    b.Navigation("AnonymousReportCategory");
                });

            modelBuilder.Entity("WDPR_Model.Models.PublicReport", b =>
                {
                    b.HasOne("WDPR_Model.Models.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId");

                    b.HasOne("WDPR_Model.Models.PublicReportCategory", "publicReportCategory")
                        .WithMany("PublicReports")
                        .HasForeignKey("publicReportCategoryId");

                    b.Navigation("publicReportCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WDPR_Model.Models.Address", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WDPR_Model.Models.AnonymousReportCategory", b =>
                {
                    b.Navigation("AnonymousReports");
                });

            modelBuilder.Entity("WDPR_Model.Models.FlagCategory", b =>
                {
                    b.Navigation("Flags");
                });

            modelBuilder.Entity("WDPR_Model.Models.PublicReportCategory", b =>
                {
                    b.Navigation("PublicReports");
                });

            modelBuilder.Entity("WDPR_Model.Models.Report", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Flags");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("WDPR_Model.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WDPR_Model.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Flags");

                    b.Navigation("Likes");

                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
